- hosts: all
  become: true

  tasks:
  - name: Installer des packages qui permettent à apt d'être utilisé sur HTTPS
    apt:
     name: "{{ packages }}"
     state: present
    vars:
     packages:
     - apt-transport-https
     - ca-certificates
     - curl
     - gnupg-agent
     - software-properties-common

  - name: Ajouter une clé de signature apt pour Docker
    apt_key:
     url: https://download.docker.com/linux/ubuntu/gpg
     state: present

  - name: Ajouter un repo apt docker
    apt_repository:
     repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
     state: present

  - name: Installer containerd
    apt:
     name: containerd.io
     state: present

  - name: Supprimer config de containerd
    file: 
     path: /etc/containerd/config.toml
     state: absent

  - name: Copier config.toml sur les hôtes
    copy:
     src: config.toml
     dest: /etc/containerd/config.toml
     owner: root
     group: root
     mode: 644
    notify:
    - Restarter Containerd

  - name: Télécharger cri
    command: wget https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.25.0/crictl-v1.25.0-linux-amd64.tar.gz
  - name: Extraire cri
    command: "tar zxvf crictl-v1.25.0-linux-amd64.tar.gz -C /usr/local/bin"
  - name: Charger module netfilter
    command: "modprobe br_netfilter"
  - name: Activer ip_forwarding
    command: "sysctl -w net.ipv4.ip_forward=1"
  - name: Supprimer le fichier d'échange de /etc/fstab
    mount:
     name: "{{ item }}"
     fstype: swap
     state: absent
    with_items:
    - swap
    - none
  - name: Désactiver swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Ajouter une clé de signature apt pour Kubernetes
    apt_key:
     url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
     state: present

  - name: Ajout d'un répo apt pour Kubernetes
    apt_repository:
     repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
     state: present
     filename: kubernetes.list

  - name: Installer les binaires Kubernetes
    apt:
     name: "{{ packages }}"
     state: present
    vars:
     packages:
     - kubelet
     - kubeadm
     - kubectl
  - name: Configurer ip du node
    lineinfile:
     path: /etc/default/kubelet
     create: yes
     line: KUBELET_EXTRA_ARGS=--node-ip={{ ansible_eth1.ipv4.address }}
    notify:
    - Restarter Containerd


  handlers :
  - name: Restarter Containerd
    service:
     name: containerd
     state: restarted
